{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/emiliano/onboarding/books/8react/24/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    title: props.meetupData.title,\n    image: props.meetupData.image,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://emiliano:2Zk1ycrFXoxEmCJp@cluster0.yfrhm1a.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://emiliano:2Zk1ycrFXoxEmCJp@cluster0.yfrhm1a.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  }); // const meetups = await meetupsCollection.find({}, {_id: 1}).toArray();\n\n  client.close();\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup.id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/emiliano/onboarding/books/8react/24/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","MeetupDetail","MeetupDetails","props","meetupData","title","image","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","console","log","id"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,GAAyB;AACvB,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEC,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoB,0GAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA3B,EAAqCC,OAArC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMf,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoB,0GAApB,CAArB;AAEA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMe,cAAc,GAAGhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAC/Cb,IAAAA,GAAG,EAAEjB,QAAQ,CAACyB,QAAD;AADkC,GAA1B,CAAvB,CAT4C,CAa5C;;AAEAf,EAAAA,MAAM,CAACS,KAAP;AAEAY,EAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AAEA,SAAO;AACLtB,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACV6B,QAAAA,EAAE,EAAEJ,cAAc,CAACI,EAAf,CAAkBP,QAAlB,EADM;AAEVrB,QAAAA,KAAK,EAAEwB,cAAc,CAACxB,KAFZ;AAGVE,QAAAA,OAAO,EAAEsB,cAAc,CAACtB,OAHd;AAIVD,QAAAA,KAAK,EAAEuB,cAAc,CAACvB,KAJZ;AAKVE,QAAAA,WAAW,EAAEqB,cAAc,CAACrB;AALlB;AADP;AADF,GAAP;AAWD;AAED,eAAeN,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails() {\n  return (\n    <MeetupDetail\n      title={props.meetupData.title}\n      image={props.meetupData.image}\n      address={props.meetupData.address}\n      description={props.meetupData.description}\n    />\n  );\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://emiliano:2Zk1ycrFXoxEmCJp@cluster0.yfrhm1a.mongodb.net/meetups?retryWrites=true&w=majority')\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n\n  const meetups = await meetupsCollection.find({}, {_id: 1}).toArray();\n\n  client.close();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString()}\n    })),\n  }\n}\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n\n  const client = await MongoClient.connect('mongodb+srv://emiliano:2Zk1ycrFXoxEmCJp@cluster0.yfrhm1a.mongodb.net/meetups?retryWrites=true&w=majority')\n\n  const db = client.db();\n\n  const meetupsCollection = db.collection('meetups');\n\n  const selectedMeetup = meetupsCollection.findOne({\n    _id: ObjectId(meetupId),\n  });\n\n  // const meetups = await meetupsCollection.find({}, {_id: 1}).toArray();\n\n  client.close();\n\n  console.log(meetupId)\n\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup.id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    }\n  }\n}\n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}