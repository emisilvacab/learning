{"ast":null,"code":"var _jsxFileName = \"/Users/emiliano/onboarding/books/8react/21/12-adv-starting-project/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useRouteLoaderData, Link, json, redirect, defer, Await } from \"react-router-dom\";\nimport EventItem from '../components/EventItem';\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const data = useRouteLoaderData('event-detail');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Await, {\n      resolve: event,\n      children: loadedEvent => /*#__PURE__*/_jsxDEV(EventItem, {\n        event: loadedEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n        event: loadedEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"..\",\n        relative: \"path\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(EventDetailPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\n;\nexport default EventDetailPage;\nasync function loadEvent(id) {\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for  selected event.'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.event;\n  }\n}\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    return json({\n      message: 'Could not fetch events.'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  return defer({\n    event: loadEvent(id),\n    events: loadEvents()\n  });\n}\n;\nexport async function action({\n  params,\n  request\n}) {\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not delete event.'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useRouteLoaderData","Link","json","redirect","defer","Await","EventItem","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","data","children","resolve","event","loadedEvent","fileName","_jsxFileName","lineNumber","columnNumber","events","loadedEvents","to","relative","_c","loadEvent","id","response","fetch","ok","message","status","resData","loadEvents","loader","request","params","eventId","action","method","$RefreshReg$"],"sources":["/Users/emiliano/onboarding/books/8react/21/12-adv-starting-project/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { useRouteLoaderData, Link, json, redirect, defer, Await } from \"react-router-dom\";\nimport EventItem from '../components/EventItem';\nimport EventsList from \"../components/EventsList\";\n\nfunction EventDetailPage() {\n  const data = useRouteLoaderData('event-detail');\n\n  return (\n    <>\n      <Await resolve={event}>\n        {loadedEvent => <EventItem event={loadedEvent} />}\n      </Await>\n      <Await resolve={events}>\n        {loadedEvents => <EventsList event={loadedEvents} />}\n      </Await>\n      <p><Link to=\"..\" relative=\"path\">Back</Link></p>\n    </>\n  );\n};\n\nexport default EventDetailPage;\n\nasync function loadEvent(id) {\n  const response = await fetch('http://localhost:8080/events/' + id);\n\n  if (!response.ok) {\n    throw json(\n      { message: 'Could not fetch details for  selected event.' },\n      { status: 500 }\n    );\n  } else {\n    const resData = await response.json();\n    return resData.event;\n  }\n}\n\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    return json(\n      { message: 'Could not fetch events.' },\n      { status: 500 }\n    );\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\n\nexport async function loader({request, params}) {\n  const id = params.eventId;\n\n  return defer({\n    event: loadEvent(id),\n    events: loadEvents()\n  })\n};\n\nexport async function action({params, request}) {\n  const id = params.eventId\n  const response = await fetch('http://localhost:8080/events/' + id, {\n    method: request.method\n  });\n\n  if (!response.ok) {\n    throw json(\n      {message: 'Could not delete event.'},\n      {status: 500}\n    );\n  }\n  return redirect('/events');\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}