{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useReducer } from \"react\";\nconst initialInputState = {\n  value: '',\n  isTouched: false\n};\nconst inputStateReducer = (state, action) => {\n  if (action.type === 'INPUT') {\n    return {\n      value: action.value\n    };\n  }\n  ;\n  if (action.type === 'BLUR') {\n    return {\n      value: action.value\n    };\n  }\n  ;\n  if (action.type === 'RESET') {}\n  ;\n  return initialInputState;\n};\nconst useInput = validateValue => {\n  _s();\n  // const [enteredValue, setEnteredValue] = useState('');\n  // const [isTouched, setIsTouched] = useState(false);\n\n  const [inputState, dispatch] = useReducer(inputStateReducer, initialInputState);\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n  const valueInputChangeHandler = event => {\n    dispatch({\n      type: 'INPUT',\n      value: event.target.value\n    });\n  };\n  const inputBlurHandler = event => {\n    dispatch({\n      type: 'BLUR'\n    });\n  };\n  const reset = () => {\n    dispatch({\n      type: 'RESET'\n    });\n  };\n  return {\n    value: inputState.value,\n    isValid: valueIsValid,\n    hasError,\n    valueInputChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n_s(useInput, \"gvJkPEQ6Ju5turm8Oo71bK8W7Zk=\");\nexport default useInput;\n\n// import { useState } from \"react\";\n\n// const useInput = (validateValue) => {\n//   const [enteredValue, setEnteredValue] = useState('');\n//   const [isTouched, setIsTouched] = useState(false);\n\n//   const valueIsValid = validateValue(enteredValue);\n//   const hasError = !valueIsValid && isTouched;\n\n//   const valueInputChangeHandler = event => {\n//     setEnteredValue(event.target.value);\n\n//   }\n\n//   const inputBlurHandler = event => {\n//     setIsTouched(true);\n//   }\n\n//   const reset = () => {\n//     setEnteredValue('');\n//     setIsTouched(false);\n//   }\n\n//   return {\n//     value: enteredValue,\n//     isValid: valueIsValid,\n//     hasError,\n//     valueInputChangeHandler,\n//     inputBlurHandler,\n//     reset\n//   };\n// };\n\n// export default useInput;","map":{"version":3,"names":["useReducer","initialInputState","value","isTouched","inputStateReducer","state","action","type","useInput","validateValue","_s","inputState","dispatch","valueIsValid","enteredValue","hasError","valueInputChangeHandler","event","target","inputBlurHandler","reset","isValid"],"sources":["/Users/emiliano/onboarding/books/8react/17/forms/src/hooks/use-input.js"],"sourcesContent":["import { useReducer } from \"react\";\n\nconst initialInputState = {\n  value: '',\n  isTouched: false\n};\n\nconst inputStateReducer = (state, action) => {\n  if (action.type === 'INPUT') {\n    return { value: action.value }\n  };\n  if (action.type === 'BLUR') {\n    return { value: action.value }\n  };\n  if (action.type === 'RESET') {\n\n  };\n  return initialInputState;\n};\n\nconst useInput = (validateValue) => {\n  // const [enteredValue, setEnteredValue] = useState('');\n  // const [isTouched, setIsTouched] = useState(false);\n\n  const [inputState, dispatch] = useReducer(inputStateReducer, initialInputState);\n\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n\n  const valueInputChangeHandler = event => {\n    dispatch({type: 'INPUT', value: event.target.value});\n  };\n\n  const inputBlurHandler = event => {\n    dispatch({type: 'BLUR'});\n  };\n\n  const reset = () => {\n    dispatch({type: 'RESET'});\n  };\n\n\n  return {\n    value: inputState.value,\n    isValid: valueIsValid,\n    hasError,\n    valueInputChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n\nexport default useInput;\n\n// import { useState } from \"react\";\n\n// const useInput = (validateValue) => {\n//   const [enteredValue, setEnteredValue] = useState('');\n//   const [isTouched, setIsTouched] = useState(false);\n\n//   const valueIsValid = validateValue(enteredValue);\n//   const hasError = !valueIsValid && isTouched;\n\n//   const valueInputChangeHandler = event => {\n//     setEnteredValue(event.target.value);\n\n//   }\n\n//   const inputBlurHandler = event => {\n//     setIsTouched(true);\n//   }\n\n//   const reset = () => {\n//     setEnteredValue('');\n//     setIsTouched(false);\n//   }\n\n\n//   return {\n//     value: enteredValue,\n//     isValid: valueIsValid,\n//     hasError,\n//     valueInputChangeHandler,\n//     inputBlurHandler,\n//     reset\n//   };\n// };\n\n// export default useInput;"],"mappings":";AAAA,SAASA,UAAU,QAAQ,OAAO;AAElC,MAAMC,iBAAiB,GAAG;EACxBC,KAAK,EAAE,EAAE;EACTC,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC3C,IAAIA,MAAM,CAACC,IAAI,KAAK,OAAO,EAAE;IAC3B,OAAO;MAAEL,KAAK,EAAEI,MAAM,CAACJ;IAAM,CAAC;EAChC;EAAC;EACD,IAAII,MAAM,CAACC,IAAI,KAAK,MAAM,EAAE;IAC1B,OAAO;MAAEL,KAAK,EAAEI,MAAM,CAACJ;IAAM,CAAC;EAChC;EAAC;EACD,IAAII,MAAM,CAACC,IAAI,KAAK,OAAO,EAAE,CAE7B;EAAC;EACD,OAAON,iBAAiB;AAC1B,CAAC;AAED,MAAMO,QAAQ,GAAIC,aAAa,IAAK;EAAAC,EAAA;EAClC;EACA;;EAEA,MAAM,CAACC,UAAU,EAAEC,QAAQ,CAAC,GAAGZ,UAAU,CAACI,iBAAiB,EAAEH,iBAAiB,CAAC;EAE/E,MAAMY,YAAY,GAAGJ,aAAa,CAACK,YAAY,CAAC;EAChD,MAAMC,QAAQ,GAAG,CAACF,YAAY,IAAIV,SAAS;EAE3C,MAAMa,uBAAuB,GAAGC,KAAK,IAAI;IACvCL,QAAQ,CAAC;MAACL,IAAI,EAAE,OAAO;MAAEL,KAAK,EAAEe,KAAK,CAACC,MAAM,CAAChB;IAAK,CAAC,CAAC;EACtD,CAAC;EAED,MAAMiB,gBAAgB,GAAGF,KAAK,IAAI;IAChCL,QAAQ,CAAC;MAACL,IAAI,EAAE;IAAM,CAAC,CAAC;EAC1B,CAAC;EAED,MAAMa,KAAK,GAAGA,CAAA,KAAM;IAClBR,QAAQ,CAAC;MAACL,IAAI,EAAE;IAAO,CAAC,CAAC;EAC3B,CAAC;EAGD,OAAO;IACLL,KAAK,EAAES,UAAU,CAACT,KAAK;IACvBmB,OAAO,EAAER,YAAY;IACrBE,QAAQ;IACRC,uBAAuB;IACvBG,gBAAgB;IAChBC;EACF,CAAC;AACH,CAAC;AAACV,EAAA,CA9BIF,QAAQ;AAgCd,eAAeA,QAAQ;;AAEvB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}