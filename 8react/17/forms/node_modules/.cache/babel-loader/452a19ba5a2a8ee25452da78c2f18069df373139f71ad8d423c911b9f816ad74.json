{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useReducer } from \"react\";\nconst initialInputState = {\n  value: '',\n  isTouched: false\n};\nconst inputStateReducer = (state, action) => {\n  return initialInputState;\n};\nconst useInput = validateValue => {\n  _s();\n  // const [enteredValue, setEnteredValue] = useState('');\n  // const [isTouched, setIsTouched] = useState(false);\n\n  const [inputState, dispatch] = useReducer(inputStateReducer, initialInputState);\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n  const valueInputChangeHandler = event => {\n    dispatch({\n      type: 'INPUT',\n      value: event.target.value\n    });\n    // setEnteredValue(event.target.value);\n  };\n\n  const inputBlurHandler = event => {\n    setIsTouched(true);\n  };\n  const reset = () => {\n    setEnteredValue('');\n    setIsTouched(false);\n  };\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueInputChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n_s(useInput, \"gvJkPEQ6Ju5turm8Oo71bK8W7Zk=\");\nexport default useInput;\n\n// import { useState } from \"react\";\n\n// const useInput = (validateValue) => {\n//   const [enteredValue, setEnteredValue] = useState('');\n//   const [isTouched, setIsTouched] = useState(false);\n\n//   const valueIsValid = validateValue(enteredValue);\n//   const hasError = !valueIsValid && isTouched;\n\n//   const valueInputChangeHandler = event => {\n//     setEnteredValue(event.target.value);\n\n//   }\n\n//   const inputBlurHandler = event => {\n//     setIsTouched(true);\n//   }\n\n//   const reset = () => {\n//     setEnteredValue('');\n//     setIsTouched(false);\n//   }\n\n//   return {\n//     value: enteredValue,\n//     isValid: valueIsValid,\n//     hasError,\n//     valueInputChangeHandler,\n//     inputBlurHandler,\n//     reset\n//   };\n// };\n\n// export default useInput;","map":{"version":3,"names":["useReducer","initialInputState","value","isTouched","inputStateReducer","state","action","useInput","validateValue","_s","inputState","dispatch","valueIsValid","enteredValue","hasError","valueInputChangeHandler","event","type","target","inputBlurHandler","setIsTouched","reset","setEnteredValue","isValid"],"sources":["/Users/emiliano/onboarding/books/8react/17/forms/src/hooks/use-input.js"],"sourcesContent":["import { useReducer } from \"react\";\n\nconst initialInputState = {\n  value: '',\n  isTouched: false\n};\n\nconst inputStateReducer = (state, action) => {\n  return initialInputState;\n}\n\nconst useInput = (validateValue) => {\n  // const [enteredValue, setEnteredValue] = useState('');\n  // const [isTouched, setIsTouched] = useState(false);\n\n  const [inputState, dispatch] = useReducer(inputStateReducer, initialInputState)\n\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n\n  const valueInputChangeHandler = event => {\n    dispatch({type: 'INPUT', value: event.target.value});\n    // setEnteredValue(event.target.value);\n  }\n\n  const inputBlurHandler = event => {\n    setIsTouched(true);\n  }\n\n  const reset = () => {\n    setEnteredValue('');\n    setIsTouched(false);\n  }\n\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueInputChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n\nexport default useInput;\n\n// import { useState } from \"react\";\n\n// const useInput = (validateValue) => {\n//   const [enteredValue, setEnteredValue] = useState('');\n//   const [isTouched, setIsTouched] = useState(false);\n\n//   const valueIsValid = validateValue(enteredValue);\n//   const hasError = !valueIsValid && isTouched;\n\n//   const valueInputChangeHandler = event => {\n//     setEnteredValue(event.target.value);\n\n//   }\n\n//   const inputBlurHandler = event => {\n//     setIsTouched(true);\n//   }\n\n//   const reset = () => {\n//     setEnteredValue('');\n//     setIsTouched(false);\n//   }\n\n\n//   return {\n//     value: enteredValue,\n//     isValid: valueIsValid,\n//     hasError,\n//     valueInputChangeHandler,\n//     inputBlurHandler,\n//     reset\n//   };\n// };\n\n// export default useInput;"],"mappings":";AAAA,SAASA,UAAU,QAAQ,OAAO;AAElC,MAAMC,iBAAiB,GAAG;EACxBC,KAAK,EAAE,EAAE;EACTC,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC3C,OAAOL,iBAAiB;AAC1B,CAAC;AAED,MAAMM,QAAQ,GAAIC,aAAa,IAAK;EAAAC,EAAA;EAClC;EACA;;EAEA,MAAM,CAACC,UAAU,EAAEC,QAAQ,CAAC,GAAGX,UAAU,CAACI,iBAAiB,EAAEH,iBAAiB,CAAC;EAE/E,MAAMW,YAAY,GAAGJ,aAAa,CAACK,YAAY,CAAC;EAChD,MAAMC,QAAQ,GAAG,CAACF,YAAY,IAAIT,SAAS;EAE3C,MAAMY,uBAAuB,GAAGC,KAAK,IAAI;IACvCL,QAAQ,CAAC;MAACM,IAAI,EAAE,OAAO;MAAEf,KAAK,EAAEc,KAAK,CAACE,MAAM,CAAChB;IAAK,CAAC,CAAC;IACpD;EACF,CAAC;;EAED,MAAMiB,gBAAgB,GAAGH,KAAK,IAAI;IAChCI,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMC,KAAK,GAAGA,CAAA,KAAM;IAClBC,eAAe,CAAC,EAAE,CAAC;IACnBF,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAGD,OAAO;IACLlB,KAAK,EAAEW,YAAY;IACnBU,OAAO,EAAEX,YAAY;IACrBE,QAAQ;IACRC,uBAAuB;IACvBI,gBAAgB;IAChBE;EACF,CAAC;AACH,CAAC;AAACZ,EAAA,CAhCIF,QAAQ;AAkCd,eAAeA,QAAQ;;AAEvB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}